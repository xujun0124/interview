Java 9 新特性
模块系统：模块是一个包的容器，Java 9 最大的变化之一是引入了模块系统（Jigsaw 项目）。
REPL (JShell)：交互式编程环境。
HTTP 2 客户端：HTTP/2标准是HTTP协议的最新版本，新的 HTTPClient API 支持 WebSocket 和 HTTP2 流以及服务器推送特性。
改进的 Javadoc：Javadoc 现在支持在 API 文档中的进行搜索。另外，Javadoc 的输出现在符合兼容 HTML5 标准。
多版本兼容 JAR 包：多版本兼容 JAR 功能能让你创建仅在特定版本的 Java 环境中运行库程序时选择使用的 class 版本。
集合工厂方法：List，Set 和 Map 接口中，新的静态工厂方法可以创建这些集合的不可变实例。
私有接口方法：在接口中使用private私有方法。我们可以使用 private 访问修饰符在接口中编写私有方法。
进程 API: 改进的 API 来控制和管理操作系统进程。引进 java.lang.ProcessHandle 及其嵌套接口 Info 来让开发者逃离时常因为要获取一个本地进程的 PID 而不得不使用本地代码的窘境。
改进的 Stream API：改进的 Stream API 添加了一些便利的方法，使流处理更容易，并使用收集器编写复杂的查询。
改进 try-with-resources：如果你已经有一个资源是 final 或等效于 final 变量,您可以在 try-with-resources 语句中使用该变量，而无需在 try-with-resources 语句中声明一个新变量。
改进的弃用注解 @Deprecated：注解 @Deprecated 可以标记 Java API 状态，可以表示被标记的 API 将会被移除，或者已经破坏。
改进钻石操作符(Diamond Operator) ：匿名类可以使用钻石操作符(Diamond Operator)。
改进 Optional 类：java.util.Optional 添加了很多新的有用方法，Optional 可以直接转为 stream。
多分辨率图像 API：定义多分辨率图像API，开发者可以很容易的操作和展示不同分辨率的图像了。
改进的 CompletableFuture API ： CompletableFuture 类的异步机制可以在 ProcessHandle.onExit 方法退出时执行操作。
轻量级的 JSON API：内置了一个轻量级的JSON API
响应式流（Reactive Streams) API: Java 9中引入了新的响应式流 API 来支持 Java 9 中的响应式编程。




jdk 8
默认接口方法，lambda表达式，方法引用以及多重Annotation，之后你将会学到最新的API上的改进，比如流，函数式接口，Map以及全新的日期API。函数式接口、Lambda 表达式、集合的流式操作、注解的更新、安全性的增强、IO\NIO 的改进、完善的全球化功能


Executable
Parameter
java.time  package

StampedLock
CompletableFuture


java.util.function  package
java.util.stream  package


7
fork/join 的框架	ForkJoinPool
Phaser
ThreadLocalRandom

switch 代码块中加入对 String 的支持



动态类型，关于java.lang.invoke包的解释

java.lang.reflect


6
JDK6的新特性之一_Desktop类和SystemTray类 
JDK6的新特性之二_使用JAXB2来实现对象与XML之间的映射 
JDK6的新特性之三_理解StAX 
JDK6的新特性之四_使用Compiler API 
JDK6的新特性之五_轻量级HttpServer 
JDK6的新特性之七_用Console开发控制台程序 
JDK6的新特性之八_嵌入式数据库Derby 
JDK6的新特性之六_插入式注解处理API 
JDK6的新特性之九_CommonAnnotations 
JDK6的新特性之十_Web服务元数据 
JDK6的新特性之十一_更简单强大的JAX-WS 
JDK6的新特性之十三_JTable的排序和过滤 	
JDK6的新特性之十二_脚本语言支持 


5
ThreadPoolExecutor
泛型
可变参数
注释	 
1. 泛型 
2 自动装箱/拆箱 
3 for-each 
4 static import 
5 变长参数 
6 java多线程  

	
4
NIO

==========================================================

Java SE 8
Java 8是于2014年3月14号发布。从Java 8开始开发代号已经弃用了，所以从Java 8之后已经没有官方的开发代号了。

Java SE 8中的新特性

Lambda表达式
Pipelines和Streams
Date和Time API
Default方法
Type注解
Nashhorn JavaScript引擎
并发计数器
Parallel操作
移除PermGen Error
TLS SNI



Java Version SE 7
开发代号是Dolphin（海豚），于2011-07-28发行。

引入的新特性包括：

switch语句块中允许以字符串作为分支条件；
在创建泛型对象时应用类型推断；
在一个语句块中捕获多种异常；
支持动态语言；
支持try-with-resources；
引入Java NIO.2开发包；
数值类型可以用2进制字符串表示，并且可以在字符串表示中添加下划线；
钻石型语法；
null值的自动处理。



Java Version SE 6
开发代号为Mustang（野马），于2006-12-11发行。

引入的新特性包括：

支持脚本语言；
引入JDBC 4.0 API；
引入Java Compiler API；
可插拔注解；
增加对Native PKI(Public Key Infrastructure)、Java GSS(Generic Security Service)、Kerberos和LDAP(Lightweight Directory Access Protocol)的支持；
继承Web Services；
做了很多优化。



Java Version SE 5.0
开发代号为Tiger（老虎），于2004-09-30发行。

引入的新特性包括:

引入泛型；
增强循环，可以使用迭代方式；
自动装箱与自动拆箱；
类型安全的枚举；
可变参数；
静态引入；
元数据（注解）；
引入Instrumentation。



J2SE Version 1.4
开发代号为Merlin（隼），于2004-02-06发行（首次在JCP下发行）。

引入的新特性包括:

XML处理；
Java打印服务；
引入Logging API；
引入Java Web Start；
引入JDBC 3.0 API；
引入断言；
引入Preferences API；
引入链式异常处理；
支持IPv6；
支持正则表达式；
引入Image I/O slot machine API。




J2SE Version 1.3
开发代号为Kestrel（红隼），于2000-05-08发行。

引入的新特性包括：

引入Java Sound API；
jar文件索引；
对Java的各个方面都做了大量优化和增强。




J2SE Version 1.2
开发代号为Playground（操场），于1998-12-08发行。

引入的新特性包括：

引入集合（Collection）框架；
对字符串常量做内存映射；
引入JIT（Just In Time）编译器；
引入对打包的Java文件进行数字签名；
引入控制授权访问系统资源的策略工具；
引入JFC（Java Foundation Classes），包括Swing 1.0、拖放和Java 2D类库；
引入Java 插件；
在JDBC中引入可滚动结果集、BLOB、CLOB、批量更新和用户自定义类型；
在Applet中添加声音支持。




JDK Version 1.1
于1997-02-19发行。

引入的新特性包括：

引入JDBC（Java Database Connectivity）；
支持内部类；
引入Java Bean；
引入RMI（Remote Method Invocation）；
引入反射（仅用于内省）。
JDK Version 1.0
开发代号为Oak（橡树），于1996-01-23发行。